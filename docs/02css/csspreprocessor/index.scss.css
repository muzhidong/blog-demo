@charset "UTF-8";
/*
 *  less和sass的实现方式不同。less使用JavaScript实现；sas使用Ruby实现，后改用dart
 *  sass提供watch选项，实时监听语法错误，在终端和页面都有报错提示，非常友好
 *  使用dart-sass版，非node-sass、libSass
 *  sass官网：https://sass-lang.com
 *  sass与less对比：代码量相近，但less语法糖比较杂，sass语法糖比较规范，自由度更高，可扩展做的比less好
 */
/*
 * 4、内置模块，放在文件最前
 */
/*
 *  1、变量, $声明变量，:赋值变量
 *  变量可以是单位值、颜色，不支持其他
 */
@import './common.css';
.bg-red, .sass .square {
  background-color: red;
}

.circle-radius, .sass .square {
  border-radius: 50%;
}

.triangle::before, .sass .square::before {
  position: absolute;
  content: "";
  width: 0;
  height: 0;
  top: -50%;
  border: 100px solid transparent;
  border-bottom-color: gold;
}

.sass .square {
  position: relative;
  width: 200px;
  height: 200px;
}
.sass .square::after {
  position: absolute;
  content: "";
  width: 0;
  height: 0;
  top: 50%;
  border: 100px solid transparent;
  border-top-color: greenyellow;
}

/* 
 * 7、操作符(==、!=、<、<=、>、>=、+、-、*、%、字符串连接符+、not、and、or)
 * 不同单位运算报错
 * 不支持除法运算符，使用 math.div(100px, 2)
 * 不支持使用颜色作运算，可以考虑使用color.adjust函数
 */
.sass .box {
  position: relative;
  left: 40px;
  width: 50px;
  height: 50px;
  padding: 28px;
  border: 10px solid #880000;
  background-color: #666;
}

/* 
 *  5、混入
 *  通过at-rule如@mixin进行定义、@include进行应用。
 *  相较于less，只有无输出混入
 */
.sass .parent > div:nth-child(3) {
  color: blueviolet;
}
.sass .parent-second {
  color: brown;
}

.sass .rest {
  width: 200px;
  height: 200px;
  border: 1px dashed blue;
}

/** 基于让CSS更简洁以及代码的复用考虑，采用 %placeholders 定义，使用 @extend 引用的方案。好处如下：
  - %placeholders只是一个占位符，只要不通过@extend调用，编译后不会产生任何代码量
  - 使用@extend引用相同的%placeholders时，编译出来相同的CSS样式会进行合并，而如果使用@include调用定义好的@mixin，编译出来相同的CSS样式不会进行合并
  - 适于静态CSS样式，如需动态改变样式，则使用支持传参生成不同样式的@mixin方法
*/
.ghi, .def {
  color: gary;
}

.abc {
  color: gray;
}

.jkl {
  color: gray;
}

.more, .sass .extend2, .sass .extend {
  border: 2px solid orange;
  border-radius: 50%;
}

.sass .extend {
  width: 100px;
  height: 100px;
}

.sass .extend2 {
  width: 100px;
  height: 100px;
}

/*
 * 2、同less，嵌套
 */
.sass .container ul {
  list-style: none;
}
.sass .container ul li {
  border-bottom: 1px dashed gold;
}
.sass .container ul li span {
  font-weight: bold;
}

/*
 * 13、同less，导入
 */
/*
 * 15、流程控制
 * 循环 
 * 有多个at-rule支持，@each(可以是值列表、键值对列表)、 @for（start、end必须是具体数值。through包含end、to不包含end）、 @while
 * 另提供@if、@else、@else-if
 */
.sass .loop .item-1 {
  color: red;
  font-size: 13px;
}
.sass .loop .item-2 {
  color: maroon;
  font-size: 14px;
}
.sass .loop .item-3 {
  color: #550000;
  font-size: 15px;
}
.sass .loop .item-4 {
  color: #400000;
  font-size: 16px;
}
.sass .loop .item-5 {
  color: #330000;
  font-size: 17px;
}
.sass .loop .item-6 {
  color: #2b0000;
  font-size: 18px;
}

/*
 *  16、作用域
 *  sass并无命名空间和访问器的概念
 */
.sass .namespace {
  font-size: 18px;
}

/*
 *  3、partials，文件以_开头，不会被打包，常用来放置一些工具类，如常用函数、mixin等
 *  8、注释
 *  9、函数，内置各类函数（数值、字符串、颜色、Lists、Maps、计算[calc\min\max\clamp]），也可以通过@function自定义
 *  14、更多At-rules：@at-root（全局样式）、@forward（@use+@extend的结合）、@error、@warn、@debug、CSS原生（如@media、@support、@keyframes）
 */
